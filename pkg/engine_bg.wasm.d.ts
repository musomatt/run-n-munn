/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_vec2_free(a: number): void;
export function __wbg_get_vec2_x(a: number): number;
export function __wbg_set_vec2_x(a: number, b: number): void;
export function __wbg_get_vec2_y(a: number): number;
export function __wbg_set_vec2_y(a: number, b: number): void;
export function vec2_is_in_bounds(a: number): number;
export function vec2_is_grounded(a: number): number;
export function vec2_new(a: number, b: number): number;
export function __wbg_munn_free(a: number): void;
export function __wbg_get_munn_gravity(a: number): number;
export function __wbg_set_munn_gravity(a: number, b: number): void;
export function __wbg_get_munn_is_jumping(a: number): number;
export function __wbg_set_munn_is_jumping(a: number, b: number): void;
export function munn_new(): number;
export function munn_move_by(a: number, b: number, c: number): void;
export function munn_update(a: number, b: number): void;
export function munn_can_move_to(a: number, b: number): number;
export function __wbg_bullet_free(a: number): void;
export function __wbg_get_bullet_position(a: number): number;
export function __wbg_set_bullet_position(a: number, b: number): void;
export function __wbg_get_bullet_is_destroyed(a: number): number;
export function __wbg_set_bullet_is_destroyed(a: number, b: number): void;
export function __wbg_get_bullet_direction(a: number): number;
export function __wbg_set_bullet_direction(a: number, b: number): void;
export function bullet_update(a: number): void;
export function bullet_new(a: number, b: number): number;
export function __wbg_bullets_free(a: number): void;
export function bullets_new(): number;
export function bullets_push(a: number, b: number, c: number): void;
export function bullets_update(a: number): void;
export function bullets_on_collision(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function bullets_for_each(a: number, b: number): void;
export function __wbg_set_munn_position(a: number, b: number): void;
export function __wbg_set_munn_velocity(a: number, b: number): void;
export function __wbg_get_munn_position(a: number): number;
export function __wbg_get_munn_velocity(a: number): number;
export function __wbindgen_exn_store(a: number): void;
